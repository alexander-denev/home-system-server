name: home-system-server

networks:
    default:
        name: home-system-server

services:
    # ██████╗░░█████╗░██████╗░███████╗██╗░██████╗
    # ██╔══██╗██╔══██╗██╔══██╗██╔════╝██║██╔════╝
    # ██║░░██║███████║██████╦╝█████╗░░██║╚█████╗░
    # ██║░░██║██╔══██║██╔══██╗██╔══╝░░██║░╚═══██╗
    # ██████╔╝██║░░██║██████╦╝███████╗██║██████╔╝
    # ╚═════╝░╚═╝░░╚═╝╚═════╝░╚══════╝╚═╝╚═════╝░
    proxyman:
        # Default login details:
        # Email:    admin@example.com
        # Password: changeme
        image: jc21/nginx-proxy-manager:latest
        ports:
            - "80:80" # Public HTTP Port
            - "443:443" # Public HTTPS Port
            - "8080:81" # Admin Web Interface Port
        restart: unless-stopped
        volumes:
            - ./config/dabeis/proxyman/data:/data
            - ./config/dabeis/proxyman/letsencrypt:/etc/letsencrypt
        healthcheck:
            test: ["CMD", "/usr/bin/check-health"]
            interval: 60s
            timeout: 10s
            retries: 3
            start_period: 30s

    homarr:
        image: ghcr.io/homarr-labs/homarr:latest
        # ports:
        # - '7575:7575' # Web Interface
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
            - ./config/dabeis/homarr:/appdata
        restart: unless-stopped
        environment:
            - SECRET_ENCRYPTION_KEY=${SECRET_ENCRYPTION_KEY}

    watchtower:
        image: containrrr/watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        restart: unless-stopped
        environment:
            - WATCHTOWER_SCHEDULE=0 0 4 * * * # Run every day at 4am

    wireguard:
        image: ghcr.io/wg-easy/wg-easy
        volumes:
            - ./config/dabeis/wireguard:/etc/wireguard
        ports:
            - "51820:51820/udp"
            # - "51821:51821/tcp" # Web Interface
        restart: unless-stopped
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
            # - NET_RAW # ⚠️ Uncomment if using Podman
        sysctls:
            - net.ipv4.ip_forward=1
            - net.ipv4.conf.all.src_valid_mark=1
        environment:
            # Change Language:
            # (Supports: en, ua, ru, tr, no, pl, fr, de, ca, es, ko, vi, nl, is, pt, chs, cht, it, th, hi)
            - LANG=en
            # ⚠️ Required:
            # Change this to your host's public address
            - WG_HOST=vpn.${STACK_HOST}

            # Optional:
            # - PASSWORD=foobar123 (deprecated, see readme)
            # - PASSWORD_HASH=$$2y$$10$$hBCoykrB95WSzuV4fafBzOHWKu9sbyVa34GJr8VV5R/pIelfEMYyG (needs double $$, hash of 'foobar123'; see "How_to_generate_an_bcrypt_hash.md" for generate the hash)
            # - PORT=51821
            # - WG_PORT=51820
            # - WG_CONFIG_PORT=92820
            # - WG_DEFAULT_ADDRESS=10.8.0.x
            # - WG_DEFAULT_DNS=192.168.0.2
            # - WG_MTU=1420
            # - WG_ALLOWED_IPS=192.168.15.0/24, 10.0.1.0/24
            # - WG_PERSISTENT_KEEPALIVE=25
            # - WG_PRE_UP=echo "Pre Up" > /etc/wireguard/pre-up.txt
            # - WG_POST_UP=echo "Post Up" > /etc/wireguard/post-up.txt
            # - WG_PRE_DOWN=echo "Pre Down" > /etc/wireguard/pre-down.txt
            # - WG_POST_DOWN=echo "Post Down" > /etc/wireguard/post-down.txt
            # - UI_TRAFFIC_STATS=true
            # - UI_CHART_TYPE=0 # (0 Charts disabled, 1 # Line chart, 2 # Area chart, 3 # Bar chart)

    portainer:
        image: portainer/portainer-ce:latest
        # ports:
        #     - "9443:9443" # Web Interface
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./config/dabeis/portainer:/data

    portainer_agent:
        # We run a portainer agent due to the fact, that portainer alone cannot browse volumes. This is a workaround.
        image: portainer/agent:latest
        # ports:
        #     - 9001:9001 # Communication Port
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/lib/docker/volumes:/var/lib/docker/volumes

    # ███╗░░██╗███████╗██╗░░██╗████████╗░█████╗░██╗░░░░░░█████╗░██╗░░░██╗██████╗░
    # ████╗░██║██╔════╝╚██╗██╔╝╚══██╔══╝██╔══██╗██║░░░░░██╔══██╗██║░░░██║██╔══██╗
    # ██╔██╗██║█████╗░░░╚███╔╝░░░░██║░░░██║░░╚═╝██║░░░░░██║░░██║██║░░░██║██║░░██║
    # ██║╚████║██╔══╝░░░██╔██╗░░░░██║░░░██║░░██╗██║░░░░░██║░░██║██║░░░██║██║░░██║
    # ██║░╚███║███████╗██╔╝╚██╗░░░██║░░░╚█████╔╝███████╗╚█████╔╝╚██████╔╝██████╔╝
    # ╚═╝░░╚══╝╚══════╝╚═╝░░╚═╝░░░╚═╝░░░░╚════╝░╚══════╝░╚════╝░░╚═════╝░╚═════╝░
    nextcloud:
        image: nextcloud:latest
        restart: unless-stopped
        volumes:
            - ./config/nextcloud/config:/var/www/html/config
            - ./config/nextcloud/custom_apps:/var/www/html/custom_apps
            - ./config/nextcloud/theme:/var/www/html/themes
            - ${BIGFILES_MOUNTPOINT}/nextcloud:/var/www/html/data
        # ports:
        #     - 80:80 # Web interface
        depends_on:
            - postgres
    postgres:
        image: postgres:latest
        restart: unless-stopped
        volumes:
            - ${BIGFILES_MOUNTPOINT}/postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        # ports:
        #     - 5432:5432 # Database port

    # ░█████╗░██████╗░██████╗░░██████╗████████╗░█████╗░░█████╗░██╗░░██╗
    # ██╔══██╗██╔══██╗██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔══██╗██║░██╔╝
    # ███████║██████╔╝██████╔╝╚█████╗░░░░██║░░░███████║██║░░╚═╝█████═╝░
    # ██╔══██║██╔══██╗██╔══██╗░╚═══██╗░░░██║░░░██╔══██║██║░░██╗██╔═██╗░
    # ██║░░██║██║░░██║██║░░██║██████╔╝░░░██║░░░██║░░██║╚█████╔╝██║░╚██╗
    # ╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝
    prowlarr:
        image: linuxserver/prowlarr:latest
        volumes:
            - ./config/arrstack/prowlarr:/config
        # ports:
        #     - 9696:9696
        restart: unless-stopped

    sonarr:
        image: linuxserver/sonarr:latest
        volumes:
            - ./config/arrstack/sonarr:/config
            - ${BIGFILES_MOUNTPOINT}/arrstack:/data
        # ports:
        # - 8989:8989
        restart: unless-stopped

    radarr:
        image: linuxserver/radarr:latest
        volumes:
            - ./config/arrstack/radarr:/config
            - ${BIGFILES_MOUNTPOINT}/arrstack:/data
        # ports:
        #     - 7878:7878
        restart: unless-stopped

    readarr:
        image: linuxserver/readarr:develop
        volumes:
            - ./config/arrstack/readarr:/config
            - ${BIGFILES_MOUNTPOINT}/arrstack:/data
        # ports:
        # - 8787:8787
        restart: unless-stopped

    bazarr:
        image: linuxserver/bazarr:latest
        volumes:
            - /path/to/bazarr/config:/config
            - ${BIGFILES_MOUNTPOINT}/arrstack:/data
        # ports:
        #     - 6767:6767 # Web interface
        restart: unless-stopped

    jellyfin:
        image: linuxserver/jellyfin:latest
        ports:
            # - '8096:8096/tcp'   # Web interface
            - "7359:7359/udp" # Network discovery
            - "1900:1900/udp" # DLNA port
        volumes:
            - ./config/arrstack/jellyfin:/config
            - ${BIGFILES_MOUNTPOINT}/arrstack/media:/data
        restart: unless-stopped

    jellyseerr:
        image: fallenbagel/jellyseerr:latest
        # ports:
        #     - 5055:5055 # Web interface
        volumes:
            - ./config/arrstack/jellyseerr:/app/config
        restart: unless-stopped

    deluge:
        # Default login details:
        # Email:    admin
        # Password: deluge
        image: linuxserver/deluge:latest
        volumes:
            - ./config/arrstack/deluge:/config
            - ${BIGFILES_MOUNTPOINT}/arrstack/torrent:/data/torrent
        # ports:
        #     - 8112:8112 # Web interface
        #     - 6881:6881 # Torrent port
        #     - 6881:6881/udp # Torrent port
        #     - 58846:58846 # Thin client connectivity
        restart: unless-stopped

    # ███████╗██╗██╗░░░░░███████╗░██████╗
    # ██╔════╝██║██║░░░░░██╔════╝██╔════╝
    # █████╗░░██║██║░░░░░█████╗░░╚█████╗░
    # ██╔══╝░░██║██║░░░░░██╔══╝░░░╚═══██╗
    # ██║░░░░░██║███████╗███████╗██████╔╝
    # ╚═╝░░░░░╚═╝╚══════╝╚══════╝╚═════╝░
    filebrowser:
        image: filebrowser/filebrowser:s6
        volumes:
            - ./config/filebrowser:/config
            - ${BIGFILES_MOUNTPOINT}/filebrowser/files:/srv
            - ${BIGFILES_MOUNTPOINT}/filebrowser/database:/database
